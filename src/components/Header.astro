---
import LogoHeader from "./LogoHeader.astro";
import ThemeToggle from "./ThemeToggle.astro";
import AddressLink from "./AddressLink.astro";
import { getStoreStatus } from "./StoreStatus.astro";

const navItems = [
  { label: 'Home', href: '/' },
  { label: 'Information', href: '/information' },
];

// Get the current pathname and normalize it
const currentPath = Astro.url.pathname;
const isActive = (href: string) => {
  if (href === '/') {
    return currentPath === '/';
  }
  return currentPath.startsWith(href);
};

// Get store status
const storeStatus = getStoreStatus();
---

<header class="w-full bg-white dark:bg-gray-900 shadow-logo dark:shadow-gray-800 transition-colors duration-200">
  {/* Quick Contact Bar - Mobile Optimized */}
  <div class="bg-logo-50 dark:bg-gray-800 border-b border-logo-200 dark:border-gray-700 py-2">
    <div class="mx-auto max-w-6xl px-4">
      <div class="flex flex-col sm:flex-row items-center justify-center gap-1 sm:gap-6 text-sm">
        {/* Mobile: Phone and Location on first line */}
        <div class="flex items-center justify-center gap-4 sm:gap-6 sm:contents">
          {/* Phone */}
          <a href="tel:+12764771515" class="flex items-center gap-1 text-blue-600 dark:text-blue-400 hover:underline transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"/>
            </svg>
            <span class="font-medium">276-477-1515</span>
          </a>

          {/* Location */}
          <AddressLink class="flex items-center gap-1 text-blue-600 dark:text-blue-400 hover:underline transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
            </svg>
            <span class="hidden sm:inline">227 W Main St, Abingdon, VA</span>
            <span class="sm:hidden">227 W Main St</span>
          </AddressLink>
        </div>

        {/* Store Status - Second line on mobile, inline on desktop */}
        <div class={`flex items-center gap-1 font-medium ${storeStatus.statusClass}`}>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/>
            <path d="M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"/>
          </svg>
          <span>{storeStatus.statusText}</span>
          <span class="hidden sm:inline text-xs text-gray-500 dark:text-gray-400 ml-1">
            ({storeStatus.hoursText})
          </span>
        </div>
      </div>
    </div>
  </div>

  {/* Theme Toggle - Fixed Position */}
  <div class="fixed right-4 top-16 z-50">
    <ThemeToggle />
  </div>

  <div class="mx-auto max-w-6xl px-4 py-3 md:py-4">
    {/* Logo Header */}
    <div class="flex justify-center mb-3 md:mb-4">
      <LogoHeader />
    </div>

    {/* Navigation */}
    <nav class="border-t border-b border-logo-200 dark:border-gray-700 py-2 md:py-3">
      {/* Mobile and Desktop Navigation Combined */}
      <ul class="flex justify-center space-x-4 md:space-x-8 text-lg">
        {navItems.map((item) => (
          <li>
            <a
              href={item.href}
              class={`transition-colors ${
                isActive(item.href)
                  ? 'text-blue-600 dark:text-blue-400 font-bold'
                  : 'text-blue-600 dark:text-blue-400 hover:underline'
              }`}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  let isMobileMenuOpen = false;

  mobileMenuButton?.addEventListener('click', () => {
    isMobileMenuOpen = !isMobileMenuOpen;
    if (mobileMenu) {
      mobileMenu.classList.toggle('hidden');
    }
    if (menuIcon) {
      menuIcon.textContent = isMobileMenuOpen ? '▲' : '▼';
    }
    mobileMenuButton.setAttribute('aria-label', isMobileMenuOpen ? 'Close menu' : 'Open menu');
  });
</script> 