---
import { Image } from 'astro:assets';

interface Props {
  images: string[];
  title?: string;
  columns?: 1 | 2 | 3 | 4;
  aspectRatio?: 'square' | 'video' | 'auto';
}

const { 
  images, 
  title, 
  columns = 3,
  aspectRatio = 'square'
} = Astro.props;

const gridCols = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'
};

const aspectRatioClass = {
  'square': 'aspect-square',
  'video': 'aspect-video',
  'auto': 'aspect-auto'
};

// Function to check if a URL is external
const isExternalUrl = (url: string) => {
  return url.startsWith('http://') || url.startsWith('https://');
};
---

<section class="py-8">
  {title && (
    <h2 class="text-3xl font-serif font-bold text-center mb-8 text-gray-900 dark:text-white">{title}</h2>
  )}
  
  <div class={`grid ${gridCols[columns]} gap-6`}>
    {images.map((image, index) => (
      <div
        data-image={image}
        class={`relative ${aspectRatioClass[aspectRatio]} cursor-pointer group gallery-image`}
      >
        {isExternalUrl(image) ? (
          <img
            src={image}
            alt={`Gallery image ${index + 1}`}
            class="w-full h-full object-cover rounded-lg transition-transform duration-300 group-hover:scale-105"
            loading="lazy"
            decoding="async"
          />
        ) : (
          <Image
            src={image}
            alt={`Gallery image ${index + 1}`}
            width={800}
            height={800}
            class="w-full h-full object-cover rounded-lg transition-transform duration-300 group-hover:scale-105"
            loading="lazy"
            decoding="async"
          />
        )}
        <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300 rounded-lg" />
      </div>
    ))}
  </div>

  {/* Simple Lightbox */}
  <div
    id="lightbox"
    class="fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4 hidden overflow-auto cursor-pointer"
  >
    <div class="relative w-full h-full flex items-center justify-center">
      <img
        id="lightbox-image"
        src=""
        alt="Selected item"
        class="max-w-full max-h-[90vh] object-contain"
      />
    </div>
  </div>
</section>

<script>
  const lightbox = document.getElementById('lightbox');
  const lightboxImage = document.getElementById('lightbox-image') as HTMLImageElement;
  const galleryImages = document.querySelectorAll('.gallery-image');

  galleryImages.forEach(image => {
    image.addEventListener('click', () => {
      const imageUrl = image.getAttribute('data-image');
      if (imageUrl && lightbox && lightboxImage) {
        lightboxImage.src = imageUrl;
        lightbox.classList.remove('hidden');
      }
    });
  });

  // Close lightbox when clicking anywhere
  lightbox?.addEventListener('click', () => {
    if (lightbox) {
      lightbox.classList.add('hidden');
    }
  });
</script>

<style>
  #lightbox-image {
    transition: transform 0.3s ease-in-out;
  }
</style> 